#!/usr/bin/ash

run_hook ()
{
    local encfile decfile iteration attempts prompt badpassword dev arg1 arg2 retcode password passwordHash

    if [ "x${bfkf}" != "x" ]; then
        encfile="/enc_keyfile.bin"
        decfile="/crypto_keyfile.bin"
        fifo_file="/pass.pipe"
        mkfifo $fifo_file
        exec 6<>$fifo_file
        rm $fifo_file

        iteration=1000
        attempts=5

        prompt="Enter password: "
        badpassword="Password incorrect."

        dev="$(echo "${bfkf}" | cut -d: -f1)"
        arg1="$(echo "${bfkf}" | cut -d: -f2)"
        arg2="$(echo "${bfkf}" | cut -d: -f3)"

        if poll_device "${dev}" "${rootdelay}"; then
            case "${arg1}" in
                *[!0-9]*)
                    mkdir /mntkey
                    mount -r -t "${arg1}" "${dev}" /mntkey
                    dd if="/mntkey/${arg2}" of="${encfile}" >/dev/null 2>&1
                    umount /mntkey
                    rm -rf /mntkey
                    ;;
                *)
                    dd if="${dev}" of="${encfile}" bs=1 skip="${arg1}" count="${arg2}" >/dev/null 2>&1
                    ;;
            esac
        fi

        if [ -f "${encfile}" ]; then
            while true; do
                read -rsp "${prompt}" password
                i=0
                while [ ${i} -lt ${iteration} ]; do
                    password=`echo -n "${password}" | openssl dgst -whirlpool -hex 2> /dev/null | cut -d ' ' -f 2`
                    i=$(( ${i} + 1 ))
                done
                echo -n "${password}" >&6
                openssl aes-256-cbc -pass fd:6 -d -pbkdf2 -in "${encfile}" -out "${decfile}" >/dev/null 2>&1
                retcode="$?"
                if [ "${retcode}" != "0" ]; then
                    echo -e "\n${badpassword}\n"
                    attempts=$(( ${attempts} - 1 ))
                    [ "${attempts}" == "0" ] && echo "Keyfile could not be decrypted" && break
                else
                    break
                fi
            done

            rm -f "${encfile}"
        else
            echo "Encrypted keyfile could not be opened. Reverting to 'encrypt' hook."
        fi
    fi
    exec 6>&-
}
