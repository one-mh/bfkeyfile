#!/bin/bash
#
# GPLv3
# Thomas Dwyer
# tomd.tel
#

iteration=1000

create_msg='Create: gen-cryptkey create'
decrypt_msg='Decrypt: gen-cryptkey decrypt PATH_TO_KEYFILE'

main () {
	action=$1
	if [ -z $action ]; then
		echo -e "Usage:\n$create_msg\n$decrypt_msg"

	elif [ $action == "create" ]; then
		crypt

	elif [ $action == "decrypt" ]; then
		if [ -z $2 ]; then
			echo -e "Usage:\n$create_msg\n$decrypt_msg"
		else
			decrypt $2
		fi
	else
		echo -e "Usage:\n$create_msg\n$decrypt_msg"
	fi
	exit 0
}

crypt () {
	encfile="enc_keyfile.bin"
    pass_fifo=/tmp/pass_pipe
    mkfifo $pass_fifo
    exec 6<>$pass_fifo
    rm $pass_fifo

    mkfifo /tmp/password
	echo "$encfile encrypted keyfile will be created"
	echo ''
	read -rsp "Enter password: " password
	password1=`echo -n "$password" | openssl dgst -whirlpool -hex | cut -d ' ' -f 2`
	echo ''
	read -rsp "Enter password Again: " verify
	password2=`echo -n "$verify" | openssl dgst -whirlpool -hex | cut -d ' ' -f 2`
	if [[ "$password1" == "$password2" ]]; then

		for (( i=1; i<=$iteration; i++ )); do
			password=`echo -n "$password" | openssl dgst -whirlpool -hex | cut -d ' ' -f 2`
		done
         echo -n "$password" >&6
		dd if=/dev/urandom bs=1k count=256 | openssl enc -aes-256-cbc -pbkdf2 -pass fd:6 -salt -out "${encfile}"
	else
		echo "Passwords did not match"
	fi
    exec 6>&-
}

decrypt () {
	encfile=$1
	decfile="crypto_keyfile.bin"
    pass_fifo=/tmp/pass_pipe
    mkfifo $pass_fifo
    exec 6<>$pass_fifo
    rm $pass_fifo

	echo "$encfile Will be decrypted to crypto_keyfile.bin"
	echo ''
	read -rsp "Enter password: " password

	for (( i=1; i<=$iteration; i++ )); do
		password=`echo -n "$password" | openssl dgst -whirlpool -hex | cut -d ' ' -f 2`
	done
    echo -n "$password" >&6
	openssl enc -aes-256-cbc -pass fd:6 -d -in "${encfile}" -out "${decfile}"
    exec 6>&-
}

main $@
